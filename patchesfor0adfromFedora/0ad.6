.TH 0AD "1" "Dec 16 2012" "0ad 0.0.12" "User Commands"

.SH NAME
0ad \- manual page for 0ad 0.0.12
.SH SYNOPSIS
.B 0ad
[\fIoptions\fR]
.SH DESCRIPTION
0 A.D. (pronounced "zero ey-dee") is a free, open-source, cross-platform
real-time strategy (RTS) game of ancient warfare. In short, it is a
historically-based war/economy game that allows players to relive or rewrite
the history of Western civilizations, focusing on the years between 500 B.C.
and 500 A.D. The project is highly ambitious, involving state-of-the-art 3D
graphics, detailed artwork, sound, and a flexible and powerful custom-built
game engine.

The game has been in development by Wildfire Games (WFG), a group of volunteer,
hobbyist game developers, since 2001.
.PP
Basic gameplay:
.TP
\fB\-autostart\fR
load a map instead of showing main menu (see below)
.TP
\fB\-editor\fR
launch the Atlas scenario editor
.TP
\fB\-mod\fR \fINAME\fR
start the game using \fINAME\fR mod
.TP
\fB\-quickstart\fR
load faster (disables audio and some system info logging)

.PP
Autostart:
.TP
\fB\-autostart\fR=\fINAME\fR
map \fINAME\fR for scenario, or rms name for random map
.TP
\fB\-autostart-ai\fR=\fIPLAYER\fR:\fIAI\fR
adds named \fIAI\fR to the given \fIPLAYER\fR (e.g. 2:testbot)

.PP
Multiplayer:
.TP
\fB\-autostart-playername\fR=\fINAME\fR
multiplayer local player \fINAME\fR (default 'anonymous')
.TP
\fB\-autostart-host\fR
multiplayer host mode
.TP
\fB\-autostart-players\fR=\fINUMBER\fR
multiplayer host: \fINUMBER\fR of client players (default 2)
.TP
\fB\-autostart-client\fR
multiplayer client mode
.TP
\fB\-autostart-ip\fR=\fIIP\fR
multiplayer client: connect to this host \fIIP\fR

.PP
Random maps only:
.TP
\fB\-autostart-random\fR
random map
.TP
\fB\-autostart-random\fR=\fISEED\fR
random map with \fISEED\fR value (default 0, use -1 for random)
.TP
\fB\-autostart-size\fR=\fITILES\fR
random map \fISIZE\fR in tiles (default 192)
.TP
\fB\-autostart-players\fR=\fINUMBER\fI
\fINUMBER\fR of players on random map

.PP
Configuration:
.TP
\fB\-conf\fR:\fIKEY\fR=\fIVALUE\fR
set a config value (overrides the contents of system.cfg)
.TP
\fB\-g\fR=\fIF\fR
set the gamma correction to '\fIF\fR' (default 1.0)
.TP
\fB\-nosound\fR
disable audio
.TP
\fB\-onlyPublicFiles\fR
force game to use only the public (default) mod
.TP
\fB\-shadows\fR
enable shadows
.TP
\fB\-vsync\fR
enable VSync, i.e. lock FPS to monitor refresh rate
.TP
\fB\-xres\fR=\fIN\fR
set screen \fIX\fR resolution to '\fIN\fR'
.TP
\fB\-yres\fR=\fIN\fR
set screen \fIY\fR resolution to '\fIN\fR'

.PP
Advanced / diagnostic:
.TP
\fB\-dumpSchema\fR
creates a file entity.rng in the working directory, containing
complete entity XML schema, used by various analysis tools
.TP
\fB\-entgraph\fR
(disabled)
.TP
\fB\-listfiles\fR
(disabled)
.TP
\fB\-profile\fR=\fINAME\fR
(disabled)
.TP
\fB\-replay\fR=\fIPATH\fR
non-visual replay of a previous game, used for analysis purposes
\fIPATH\fR is system path to commands.txt containing simulation log
.TP
\fB\-writableRoot\fR
store runtime game data in root data directory
(only use if you have write permissions on that directory)
.TP
\fB\-ooslog\fR
dumps simulation state in binary and ASCII representations each turn,
files created in sim_log within the game's log folder. \fBNOTE\fR: game will
run much slower with this option!
.TP
\fB-serializationtest\fR
checks simulation state each turn for serialization errors; on test
failure, error is displayed and logs created in oos_log within the
game's log folder. \fBNOTE\fR: game will run much slower with this option!

.PP
Archive builder:
.TP
\fB\-archivebuild\fR=\fIPATH\fR
system \fIPATH\fR of the base directory containing mod data to be archived/precached
.TP
\fB\-archivebuild-output\fR=\fIPATH\fR
system \fIPATH\fR to output of the resulting .zip archive (use with archivebuild)
.TP
\fB\-archivebuild-compress\fR
enable deflate compression in the .zip
(no zip compression by default since it hurts compression of release packages)
.TP
\fB-buildarchive\fR
(disabled)

.SH "REPORTING BUGS"
Bugs should be reported on Trac: http://trac.wildfiregames.com/
.br
On Linux / OS X: If the game detects an error, it should generate crashlog.txt
in ~/.config/0ad/logs/ . If it doesn't, it should at least print some
information on stdout. Attach crashlog.txt or the other information to the
bug report. It might also help to run the game in gdb and copy the output of
the "bt full" command, if possible.

.SH COPYRIGHT
0 A.D. is released as open source: you can freely use, copy, modify and
distribute the game's source code and data files, as long as you include
attribution to Wildfire Games and let anyone freely modify and distribute any
of your own modifications to the game's files.
